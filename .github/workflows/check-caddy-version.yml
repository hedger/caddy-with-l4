name: Check for new Caddy versions

on:
  schedule:
    - cron: '0 0 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  IMAGE: ghcr.io/${{ github.repository }}

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      caddy_version: ${{ steps.version.outputs.version }}
      formatted_version: ${{ steps.version.outputs.sanitized }}
      needs_rebuild: ${{ steps.inspect.outputs.needs_rebuild }}
    steps:
      - name: Resolve latest Caddy release
        id: version
        uses: actions/github-script@v7
        with:
          script: |
            const { data } = await github.rest.repos.getLatestRelease({ owner: 'caddyserver', repo: 'caddy' });
            const tag = (data.tag_name || '').replace(/^v/, '');
            if (!tag) {
              core.setFailed('Latest Caddy release tag not found');
              return;
            }
            const sanitized = tag.replace(/(-alpine|-builder)/g, '') || tag;
            core.info(`Latest release: ${tag}`);
            core.setOutput('version', tag);
            core.setOutput('sanitized', sanitized);

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Check if image exists
        id: inspect
        shell: bash
        env:
          VERSION: ${{ steps.version.outputs.sanitized }}
          IMAGE: ${{ env.IMAGE }}
        run: |
          set -euo pipefail
          if docker manifest inspect "${IMAGE}:${VERSION}" > /dev/null 2>&1; then
            echo "needs_rebuild=false" >> "$GITHUB_OUTPUT"
          else
            echo "needs_rebuild=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Publish summary
        shell: bash
        env:
          VERSION: ${{ steps.version.outputs.version }}
          SANITIZED: ${{ steps.version.outputs.sanitized }}
          NEEDS: ${{ steps.inspect.outputs.needs_rebuild }}
        run: |
          cat <<EOF >> "$GITHUB_STEP_SUMMARY"
          ### Caddy release check
          | value | result |
          | --- | --- |
          | latest release | ${VERSION} |
          | build version | ${SANITIZED} |
          | rebuild required | ${NEEDS} |
          EOF

  trigger-build:
    needs: check
    if: needs.check.outputs.needs_rebuild == 'true'
    uses: ./.github/workflows/docker-build-publish.yml
    with:
      caddy_version: ${{ needs.check.outputs.formatted_version || '2' }}

  report-results:
    needs: check
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Log outcome
        run: |
          echo "Latest release: ${{ needs.check.outputs.caddy_version }}"
          echo "Rebuild required: ${{ needs.check.outputs.needs_rebuild }}"
